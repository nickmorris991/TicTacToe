{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\NickM\\\\Documents\\\\LearningReact\\\\TicTacToe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\NickM\\\\Documents\\\\LearningReact\\\\TicTacToe\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Line } from 'react-lineto';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    // line specifications\n    const ColoredLine = ({\n      color\n    }) => React.createElement(\"hr\", {\n      style: {\n        color: color,\n        backgroundColor: color,\n        height: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }); // return board element (conditionally)\n\n\n    if (this.props.winner) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.status), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Line, {\n        borderStyle: \"dotted\",\n        borderColor: \"black\",\n        borderWidth: 8,\n        x0: this.props.linePos.x0,\n        y0: this.props.linePos.y0,\n        x1: this.props.linePos.x1,\n        y1: this.props.linePos.y1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    const draw = calculateDraw(current.squares); // determine status\n\n    let status;\n    let linePos;\n\n    if (winner) {\n      status = 'Winner: ' + winner.square;\n      linePos = calculateLinePos(winner.position);\n    } else if (draw) {\n      status = 'Draw! Refresh to Play Again';\n    } else {\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(ColoredLine, {\n      color: \"rgb(103, 226, 109)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      linePos: linePos,\n      winner: winner,\n      status: status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164\n  },\n  __self: this\n}), document.getElementById('root'));\n/* ***** Helper Functions ***** */\n\nfunction calculateDraw(squares) {\n  if (squares.indexOf(null) > -1) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction calculateLinePos(pos) {\n  let lineCoordinates = {};\n  lineCoordinates[[0, 1, 2]] = {\n    x0: 65,\n    y0: 190,\n    x1: 590,\n    y1: 190\n  };\n  lineCoordinates[[3, 4, 5]] = {\n    x0: 65,\n    y0: 390,\n    x1: 590,\n    y1: 390\n  };\n  lineCoordinates[[6, 7, 8]] = {\n    x0: 65,\n    y0: 590,\n    x1: 590,\n    y1: 590\n  };\n  lineCoordinates[[0, 3, 6]] = {\n    x0: 135,\n    y0: 130,\n    x1: 135,\n    y1: 630\n  };\n  lineCoordinates[[1, 4, 7]] = {\n    x0: 335,\n    y0: 130,\n    x1: 335,\n    y1: 650\n  };\n  lineCoordinates[[2, 5, 8]] = {\n    x0: 535,\n    y0: 130,\n    x1: 535,\n    y1: 650\n  };\n  lineCoordinates[[0, 4, 8]] = {\n    x0: 65,\n    y0: 125,\n    x1: 590,\n    y1: 650\n  };\n  lineCoordinates[[2, 4, 6]] = {\n    x0: 580,\n    y0: 130,\n    x1: 110,\n    y1: 630\n  };\n  return lineCoordinates[pos];\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    let _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        square: squares[a],\n        position: lines[i]\n      };\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/NickM/Documents/LearningReact/TicTacToe/src/index.js"],"names":["React","ReactDOM","Line","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","ColoredLine","color","backgroundColor","height","winner","status","linePos","x0","y0","x1","y1","Game","constructor","state","history","Array","fill","xIsNext","handleClick","current","length","slice","calculateWinner","setState","concat","draw","calculateDraw","square","calculateLinePos","position","document","getElementById","indexOf","pos","lineCoordinates","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Line} from 'react-lineto';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className = \"square\" onClick ={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    // line specifications\r\n    const ColoredLine = ({ color }) => (\r\n      <hr\r\n        style = {{ \r\n          color: color,\r\n          backgroundColor: color,\r\n          height: 5\r\n        }}\r\n      />\r\n    );\r\n    \r\n    // return board element (conditionally)\r\n    if (this.props.winner) {\r\n      return (\r\n        <div>\r\n          <div className=\"game-info\">\r\n            {this.props.status}\r\n          </div>       \r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n          <div>\r\n            <Line \r\n              borderStyle = \"dotted\" \r\n              borderColor = \"black\" \r\n              borderWidth = {8} \r\n              x0 = {this.props.linePos.x0} y0={this.props.linePos.y0} \r\n              x1={this.props.linePos.x1} y1={this.props.linePos.y1}/>\r\n          </div>\r\n        </div>\r\n      );\r\n    } \r\n    return (\r\n      <div>\r\n        <div className=\"game-info\">\r\n          {this.props.status}\r\n        </div>    \r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    ); \r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history;\r\n    const current = history[history.length -1];\r\n    const squares = current.squares.slice();\r\n    \r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n    const draw = calculateDraw(current.squares);\r\n\r\n    // determine status\r\n    let status;\r\n    let linePos;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner.square;\r\n      linePos = calculateLinePos(winner.position);\r\n    } else if (draw) {\r\n      status = 'Draw! Refresh to Play Again'\r\n    } else {\r\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n  \r\n    return (\r\n      <div> \r\n        <div className=\"game\"> \r\n          <div className=\"game-board\"> \r\n            <ColoredLine color=\"rgb(103, 226, 109)\"/> \r\n            <Board \r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n              linePos={linePos}\r\n              winner={winner}\r\n              status={status}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n/* ***** Helper Functions ***** */\r\n\r\nfunction calculateDraw(squares) {\r\n  if (squares.indexOf(null) > -1) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction calculateLinePos(pos) {\r\n  let lineCoordinates = {}\r\n  lineCoordinates[[0, 1, 2]] = {x0: 65, y0: 190, x1: 590, y1: 190};\r\n  lineCoordinates[[3, 4, 5]] = {x0: 65, y0: 390, x1: 590, y1: 390};\r\n  lineCoordinates[[6, 7, 8]] = {x0: 65, y0: 590, x1: 590, y1: 590};\r\n  lineCoordinates[[0, 3, 6]] = {x0: 135, y0: 130, x1: 135, y1: 630};\r\n  lineCoordinates[[1, 4, 7]] = {x0: 335, y0: 130, x1: 335, y1: 650};\r\n  lineCoordinates[[2, 5, 8]] = {x0: 535, y0: 130, x1: 535, y1: 650};\r\n  lineCoordinates[[0, 4, 8]] = {x0: 65, y0: 125, x1: 590, y1: 650};\r\n  lineCoordinates[[2, 4, 6]] = {x0: 580, y0: 130, x1: 110, y1: 630};\r\n  return lineCoordinates[pos];\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return { \r\n        square: squares[a],\r\n        position: lines[i]\r\n      }; \r\n    } \r\n  }\r\n  return null;\r\n}"]},"metadata":{},"sourceType":"module"}