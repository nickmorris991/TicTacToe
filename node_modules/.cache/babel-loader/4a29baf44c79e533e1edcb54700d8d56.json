{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\NickM\\\\Documents\\\\LearningReact\\\\TicTacToe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\NickM\\\\Documents\\\\LearningReact\\\\TicTacToe\\\\src\\\\index.js\";\n// basic imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // additional styling libraries\n\nimport { Line } from 'react-lineto';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice(); // if (calculateWinner(squares) || squares[i]) {\n    //   return;\n    // }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    console.log(winner);\n\n    const ColoredLine = ({\n      color\n    }) => React.createElement(\"hr\", {\n      style: {\n        color: color,\n        backgroundColor: color,\n        height: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, status), React.createElement(ColoredLine, {\n      color: \"rgb(103, 226, 109)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Line, {\n      borderStyle: \"dotted\",\n      borderColor: \"black\",\n      borderWidth: 8,\n      x0: 510,\n      y0: 125,\n      x1: 1030,\n      y1: 650,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; //check for winner\n\n  let nullCheck = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    let _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    } else if (squares[i] !== null) {\n      nullCheck++;\n    }\n  } //if neither, return null\n\n\n  if (nullCheck === 9) {\n    return \"draw\";\n  } else {\n    return null;\n  }\n}","map":{"version":3,"sources":["C:/Users/NickM/Documents/LearningReact/TicTacToe/src/index.js"],"names":["React","ReactDOM","Line","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","setState","renderSquare","render","winner","calculateWinner","console","log","ColoredLine","color","backgroundColor","height","status","Game","document","getElementById","lines","nullCheck","length","a","b","c"],"mappings":"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","sourcesContent":["// basic imports\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// additional styling libraries\r\nimport {Line} from 'react-lineto';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className = \"square\" onClick ={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const squares = this.state.squares.slice();\r\n    // if (calculateWinner(squares) || squares[i]) {\r\n    //   return;\r\n    // }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      squares: squares,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    console.log(winner);\r\n    const ColoredLine = ({ color }) => (\r\n      <hr\r\n        style = {{\r\n          color: color,\r\n          backgroundColor: color,\r\n          height: 5\r\n        }}\r\n      />\r\n    );\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n\r\n        <ColoredLine color=\"rgb(103, 226, 109)\"/>        \r\n        \r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        \r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n\r\n        <div>\r\n          <Line \r\n            borderStyle = \"dotted\" \r\n            borderColor = \"black\" \r\n            borderWidth = {8} \r\n            x0 = {510} y0={125} \r\n            x1={1030} y1={650}/>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  //check for winner\r\n  let nullCheck = 0;\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    } else if (squares[i] !== null) {\r\n      nullCheck++;\r\n    }\r\n  }\r\n\r\n  //if neither, return null\r\n  if (nullCheck === 9) {\r\n    return \"draw\";\r\n  } else {\r\n    return null;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}