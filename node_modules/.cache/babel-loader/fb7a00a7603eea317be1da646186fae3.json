{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\NickM\\\\Documents\\\\LearningReact\\\\TicTacToe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\NickM\\\\Documents\\\\LearningReact\\\\TicTacToe\\\\src\\\\index.js\";\n// basic imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // additional styling libraries\n\nimport { Line } from 'react-lineto';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    const draw = calculateDraw(this.state.squares); // line specifications\n\n    const ColoredLine = ({\n      color\n    }) => React.createElement(\"hr\", {\n      style: {\n        color: color,\n        backgroundColor: color,\n        height: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }); // determine status\n\n\n    let status;\n    let linePos;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n      linePos = calculateLinePos(winner.position);\n    } else if (draw) {\n      status = 'Draw! Refresh to Play Again';\n    } else {\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\n    } // return board element\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, status), React.createElement(ColoredLine, {\n      color: \"rgb(103, 226, 109)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Line, {\n      borderStyle: \"dotted\",\n      borderColor: \"black\",\n      borderWidth: 8,\n      x0: linePos.x0,\n      y0: linePos.y0,\n      x1: linePos.x1,\n      y1: linePos.y1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateDraw(squares) {\n  if (squares.indexOf(null) > -1) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction calculateLinePos(pos) {\n  let lineCoordinates = {}; //lineCoordinates[[0, 1, 2]]\n  // lineCoordinates[[3, 4, 5]]\n  // lineCoordinates[[6, 7, 8]]\n  // lineCoordinates[[0, 3, 6]]\n  // lineCoordinates[[1, 4, 7]]\n  // lineCoordinates[[2, 5, 8]]\n\n  lineCoordinates[[0, 4, 8]] = {\n    x0: 65,\n    y0: 125,\n    x1: 590,\n    x2: 650\n  }; // lineCoordinates[[2, 4, 6]]\n\n  return lineCoordinates[pos];\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    let _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        square: squares[a],\n        position: lines[i]\n      };\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/NickM/Documents/LearningReact/TicTacToe/src/index.js"],"names":["React","ReactDOM","Line","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","calculateWinner","setState","renderSquare","render","winner","draw","calculateDraw","ColoredLine","color","backgroundColor","height","status","linePos","calculateLinePos","position","x0","y0","x1","y1","Game","document","getElementById","indexOf","pos","lineCoordinates","x2","lines","length","a","b","c","square"],"mappings":"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","sourcesContent":["// basic imports\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// additional styling libraries\r\nimport {Line} from 'react-lineto';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className = \"square\" onClick ={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const squares = this.state.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      squares: squares,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    const draw = calculateDraw(this.state.squares);\r\n\r\n    // line specifications\r\n    const ColoredLine = ({ color }) => (\r\n      <hr\r\n        style = {{ \r\n          color: color,\r\n          backgroundColor: color,\r\n          height: 5\r\n        }}\r\n      />\r\n    );\r\n\r\n    // determine status\r\n    let status;\r\n    let linePos;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n      linePos = calculateLinePos(winner.position);\r\n    } else if (draw) {\r\n      status = 'Draw! Refresh to Play Again'\r\n    } else {\r\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    // return board element\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <ColoredLine color=\"rgb(103, 226, 109)\"/>        \r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n\r\n        {/* pass down winning cordinates to display */}\r\n        {/* goal: visualization / animation practice */}\r\n        \r\n        <div>\r\n          <Line \r\n            borderStyle = \"dotted\" \r\n            borderColor = \"black\" \r\n            borderWidth = {8} \r\n            x0 = {linePos.x0} y0={linePos.y0} \r\n            x1={linePos.x1} y1={linePos.y1}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateDraw(squares) {\r\n  if (squares.indexOf(null) > -1) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction calculateLinePos(pos) {\r\n  let lineCoordinates = {}\r\n  //lineCoordinates[[0, 1, 2]]\r\n  // lineCoordinates[[3, 4, 5]]\r\n  // lineCoordinates[[6, 7, 8]]\r\n  // lineCoordinates[[0, 3, 6]]\r\n  // lineCoordinates[[1, 4, 7]]\r\n  // lineCoordinates[[2, 5, 8]]\r\n  lineCoordinates[[0, 4, 8]] = {x0: 65, y0: 125, x1: 590, x2: 650};\r\n  // lineCoordinates[[2, 4, 6]]\r\n\r\n  return lineCoordinates[pos];\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return { \r\n        square: squares[a],\r\n        position: lines[i]\r\n      }; \r\n    } \r\n  }\r\n  return null;\r\n}"]},"metadata":{},"sourceType":"module"}